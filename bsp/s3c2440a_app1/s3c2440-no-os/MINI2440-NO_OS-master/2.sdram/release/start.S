/*
 *  start.S
 *  armboot - Startup Code for ARM920 CPU-core
 *  kangear  2013-4-10
 */

.equ        MEM_CTL_BASE,       0x48000000
.equ        SDRAM_BASE,         0x30000000

.text
.global _start
_start:
    bl  pre_lowlevel_init               @ 关闭WATCHDOG，否则CPU会不断重启
    bl  mem_ctrl_asm_init               @ 设置存储控制器
    bl  copy_steppingstone_to_sdram     @ 复制代码到SDRAM中
    ldr pc, =on_sdram                   @ 跳到SDRAM中继续执行
on_sdram:
    ldr sp, =0x34000000                 @ 设置堆栈
    bl  main
halt_loop:
    b   halt_loop

/*
 * 关看门狗
 */
pre_lowlevel_init:
	/* turn off the watchdog */
    #define pWTCON	0x53000000

	ldr	r0, =pWTCON
	mov	r1, #0x0
	str	r1, [r0]

	mov	pc, lr
/*$:  end_of pre_lowlevel_init */

copy_steppingstone_to_sdram:
    @ 将Steppingstone的4K数据全部复制到SDRAM中去
    @ Steppingstone起始地址为0x00000000，SDRAM中起始地址为0x30000000
    
    mov r1, #0
    ldr r2, =SDRAM_BASE
    mov r3, #4*1024
1:  
    ldr r4, [r1],#4     @ 从Steppingstone读取4字节的数据，并让源地址加4
    str r4, [r2],#4     @ 将此4字节的数据复制到SDRAM中，并让目地地址加4
    cmp r1, r3          @ 判断是否完成：源地址等于Steppingstone的未地址？
    bne 1b              @ 若没有复制完，继续
    mov pc,     lr      @ 返回

/*
 * 存储器控制器初始化函数
 */
#define BWSCON	0x48000000

mem_ctrl_asm_init:
	adrl	r0, SMRDATA			@这13个值的起始存储地址 这里的adrl不能简单的用ldr替代
	ldr		r1, =BWSCON			/* Bus Width Status Controller  存储控制器的13个寄存器的开始地址 */
	add     r2, r0, #13*4
0:
	ldr     r3, [r0], #4		@ 读取设置值，并让r0加4
	str     r3, [r1], #4		@ 将此值写入寄存器，并让r1加4
	cmp     r2, r0				@ 判断是否设置完所有13个寄存器
	bne     0b					@ 若没有写成，继续

	mov	pc, lr


	.ltorg
/* the literal pools origin */

SMRDATA:
    .word   0x22011110      @ BWSCON
    .word   0x00000700      @ BANKCON0
    .word   0x00000700      @ BANKCON1
    .word   0x00000700      @ BANKCON2
    .word   0x00000700      @ BANKCON3
    .word   0x00000700      @ BANKCON4
    .word   0x00000700      @ BANKCON5
    .word   0x00018005      @ BANKCON6
    .word   0x00018005      @ BANKCON7
    .word   0x008C07A3      @ REFRESH
    .word   0x000000B1      @ BANKSIZE
    .word   0x00000030      @ MRSRB6
    .word   0x00000030      @ MRSRB7
/* end_of mem_ctrl_asm_init*/
